#!/usr/bin/env node
const axios = require('axios');
const http = require('http');

const config = require('../config')[process.env.NODE_ENV || 'development'];

const log = config.log();
const service = require('../server/service')(config);

const server = http.createServer(service);

// Important - a service should not have a fixed port but should randomly choose one
server.listen(0); // zero is random selection

server.on('listening', () => {
  const registerService = () => axios.put(`http://localhost:3000/register/${config.name}/${config.version}/${server.address().port}`);
  const unregisterService = () => axios.delete(`http://localhost:3000/register/${config.name}/${config.version}/${server.address().port}`);
  registerService();
  const interval = setInterval(registerService, 20000);
  // eslint-disable-next-line no-unused-vars
  const cleanup = async () => {
    clearInterval(interval);
    await unregisterService();
  };
  process.on('uncaoughtException', async () => {
    await cleanup();
    process.exit(0);
  });
  // When starting the batch work (ctrl +c)
  process.on('SIGINT', async () => {
    await cleanup();
    process.exit(0);
  });
  // When stopping the batch work (killing the process)
  process.on('SIGTERM', async () => {
    await cleanup();
    process.exit(0);
  });

  log.info(
    `Hi there! I'm listening on port ${server.address().port} in ${service.get('env')} mode.`,
  );
});
